name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: "Version of this release and will be used as tag. Needs to match with the version in source code."

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Install and run go-winres
      run: |
        go install github.com/tc-hib/go-winres@latest
        cd src\assets && go-winres make && cd ..\..

    - name: Build amd64
      env:
        CGO_ENABLED: 1
        GOOS: windows
        GOARCH: amd64
      run: go build -ldflags -H=windowsgui -o bin/neoray-win64.exe ./src

    #- name: Set up MinGW x86
    #  uses: egor-tensin/setup-mingw@v2
    #    with:
    #    platform: x86

    - name: Build 386
      env:
        CGO_ENABLED: 1
        GOOS: windows
        GOARCH: 386
      run: go build -ldflags -H=windowsgui -o bin/neoray-win32.exe ./src

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      if: success()
      with:
        name: windows-binaries
        path: |
          bin/neoray-win64.exe
          bin/neoray-win32.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build amd64
      env:
        CGO_ENABLED: 1
        GOOS: darwin
        GOARCH: amd64
      run: go build -o bin/neoray-macos ./src

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      if: success()
      with:
        name: macos-binaries
        path: |
          bin/neoray-macos

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Set up required libs
      run: |
        sudo apt update && sudo apt upgrade
        sudo apt install libx11-dev libgtk-3-dev libgl1-mesa-dev xorg-dev

    - name: Build amd64
      env:
        CGO_ENABLED: 1
        GOOS: linux
        GOARCH: amd64
      run: go build -o bin/neoray-linux64 ./src

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      if: success()
      with:
        name: linux-binaries
        path: |
          bin/neoray-linux64

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos, build-linux]
    if: success()
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v2

      - name: Print files
        run: ls -A -l -h --color=auto

      - name: Deploy latest release
        uses: "marvinpinto/action-automatic-releases@latest"
        if: success()
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ github.event.inputs.version }}"
          prerelease: false
          title: "${{ github.event.inputs.version }}"
          files: |
            windows-binaries/neoray-win64.exe
            windows-binaries/neoray-win32.exe
            macos-binaries/neoray-macos
            linux-binaries/neoray-linux64
